<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding
                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config />
    
    <bean id="orderDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
        p:url="jdbc:mysql://localhost:3306/demo_ds"
        p:username="root"
        p:password="">
    </bean>
    
    <sharding:inline-strategy id="orderTableStrategy" sharding-column="order_id" algorithm-expression="me_order_$->{order_id % 2}" />
    
    <sharding:key-generator id="orderKeyGenerator" type="SNOWFLAKE" column="order_id" />
    
    <sharding:data-source id="shardingDataSource">
        <sharding:sharding-rule data-source-names="orderDataSource">
            <sharding:table-rules>
                <sharding:table-rule logic-table="me_order" actual-data-nodes="orderDataSource.me_order_$->{0..1}" table-strategy-ref="orderTableStrategy" key-generator-ref="orderKeyGenerator" />
            </sharding:table-rules>
            <sharding:binding-table-rules>
                <sharding:binding-table-rule logic-tables="me_order"/>
            </sharding:binding-table-rules>
        </sharding:sharding-rule>
        <sharding:props>
            <prop key="sql.show">true</prop>
        </sharding:props>
    </sharding:data-source>
    
    
    <bean id="orderSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource" />
        <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml" />
    </bean>
    
    <bean name="orderMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="komachi.sion" />
        <property name="sqlSessionFactoryBeanName" value="orderSqlSessionFactory"/>
    </bean>
    
    <context:component-scan base-package="komachi.sion.services" />
</beans>